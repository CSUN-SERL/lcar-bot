#!/bin/bash

# trap ctrl-c and call ctrl_c()
trap "ctrl_c" INT SIGINT SIGTSTP

ctrl_c()
{
    for node in $( rosnode list | grep V$ID ); do
        uavid=$( echo node | egrep -o [0-9]+ )
        if [ "$uavid" = "$ID" ]; then
            rosnode kill $node
        fi
    done

    exit
}


if [ -z "$1" ]; then #if no arguments specified
   ID=1
elif [ "$1" != "mono" ]; then #if the first argument isn't specifying the camsera type
   ID=$1
else
    printf "    usage: lcar-bot [<number>] [mono]\n\n"
    printf "       eg: lcar-bot           | launches an lcar-bot with id 1 with stereo_cam\n"
    printf "           lcar-bot 10        | launches an lcar-bot with id 10 with stereo_cam\n"
    printf "           lcar-bot 10 mono   | launches an lcar-bot with id 10 with mono_cam\n"
    exit
fi


NS="V$ID"


if [ $(lsusb | grep 'ID 2a0b:00f5' | wc -c) -ne 0 -a $# -ne 2 -a "$1" != "mono" ]; then
    ROS_NAMESPACE="$NS"            rosrun machine_vision stereo_driver &
    ROS_NAMESPACE="$NS/stereo_cam" rosrun stereo_image_proc stereo_image_proc &
    ROS_NAMESPACE="$NS"            rosrun machine_vision object_detection &
   # ROS_NAMESPACE="$NS" rosrun machine_vision disparity_view _topic:=stereo_cam/disparity &
elif [ $(ls /dev/video* | wc -c) -ne 0 ]; then
    ROS_NAMESPACE="$NS" rosrun machine_vision camera_publisher _topic:=stereo_cam/left/image_rect &
    ROS_NAMESPACE="$NS" rosrun machine_vision object_detection &
fi

ROS_NAMESPACE="$NS" rosrun gcs backup_control _id:=$ID &

wait
