#!/usr/bin/env bash

# trap ctrl-c and call ctrl_c()
trap ctrl_c INT
#trap ctrl-z and do nothing
trap "" SIGTSTP

function ctrl_c(){
    exec 2>.tmp     # redirect stderr output to .tmp
#
#    pkill rosmaster # kill rosmaster explicitly
#
#    sleep 1s        # give it time to output to terminal (avoids hang at the end)

#    pkill rosout    # kill rosout explicitly
    pkill -P $$     # kill all processes started by this script (see below)
    yes | rosnode cleanup
    rm -f .tmp      # delete stderr output
}


#roscore &
#
#sleep 1s #give roscore time to launch fully (including launching rosmaster and rosout under different processes)

#rqt &

NS=""
if [ -z "$1" ]; then
   NS=UAV1
elif [ "$1" != "-no-stereo" ]; then
   NS=UAV"$1"
fi

if [ -z "$NS" ]; then
    NS=UAV1
fi

if [ $(lsusb | grep 'ID 2a0b:00f5' | wc -c) -ne 0 -a $# -ne 2 -a "$1" != "-no-stereo" ]; then
    ROS_NAMESPACE="$NS"            rosrun machine_vision stereo_driver &
    ROS_NAMESPACE="$NS"/stereo_cam rosrun stereo_image_proc stereo_image_proc &
    ROS_NAMESPACE="$NS"            rosrun machine_vision object_detection &
    ROS_NAMESPACE="$NS" rosrun machine_vision disparity_view _topic:=stereo_cam/disparity
elif [ $(ls /dev/video* | wc -c) -ne 0 ]; then
    ROS_NAMESPACE="$NS" rosrun machine_vision camera_publisher _topic:=stereo_cam/left/image_rect &
    ROS_NAMESPACE="$NS" rosrun machine_vision object_detection
else
    wait
fi 
